{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","api.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","status","query","initialState","groupBy","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","isLoading","setIsLoading","dispatch","filteredTodos","completed","title","toLowerCase","includes","useEffect","getTodosFromServer","a","todosFromServer","todosActions","length","className","map","id","cn","onClick","currentTodoActions","uuidv4","TodoFilter","onSubmit","event","preventDefault","value","onChange","target","filterActions","placeholder","style","pointerEvents","Loader","TodoModal","href","App","useState","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49ecb181.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetGroupAction = {\n  type: 'filter/SET_GROUP';\n  payload: Status;\n};\n\ntype SetQueryAction = {\n  type: 'filter/SET_QUERY';\n  payload: string;\n};\n\nconst setTodoGroup = (status: Status): SetGroupAction => ({\n  type: 'filter/SET_GROUP',\n  payload: status,\n});\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nexport const actions = { setTodoGroup, setQuery };\n\ntype Action = SetGroupAction | SetQueryAction;\n\nexport type State = {\n  query: string;\n  groupBy: Status;\n};\n\nconst initialState = {\n  query: '',\n  groupBy: 'all',\n};\n\nconst filterReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case 'filter/SET_GROUP':\n      return { ...state, groupBy: action.payload };\n    case 'filter/SET_QUERY':\n      return { ...state, query: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\nconst todosReducer = (state: Todo[] = [], action: SetTodosAction): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport cn from 'classnames';\nimport React, { useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getTodos } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { actions as todosActions } from '../../features/todos';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  isLoading: boolean;\n  setIsLoading: (value: boolean) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ isLoading, setIsLoading }) => {\n  const dispatch = useAppDispatch();\n  const todos: Todo[] = useAppSelector((state) => state.todos);\n  const filter = useAppSelector((state) => state.filter);\n  const currentTodo: Todo | null = useAppSelector((state) => state.currentTodo);\n\n  const filteredTodos = todos\n    .filter((todo) => {\n      switch (filter.groupBy) {\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n        default:\n          return todo;\n      }\n    })\n    .filter((todo) => todo.title.toLowerCase().includes(filter.query.toLowerCase()));\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getTodosFromServer = async () => {\n      const todosFromServer = await getTodos();\n\n      dispatch(todosActions.setTodos(todosFromServer));\n    };\n\n    getTodosFromServer();\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <>\n      {filter.query && !filteredTodos.length && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      {!isLoading && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filteredTodos?.map((todo) => (\n              <tr data-cy=\"todo\" key={uuidv4()}>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={cn({\n                      'has-text-danger': !todo.completed,\n                      'has-text-success': todo.completed,\n                    })}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => dispatch(currentTodoActions.setTodo(todo))}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={cn({\n                          'far fa-eye-slash': currentTodo === todo,\n                          'far fa-eye': currentTodo !== todo,\n                        })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n\n            {/* <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">1</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">delectus aut autem</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">2</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">\n                quis ut nam facilis et officia qui\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\" className=\"has-background-info-light\">\n            <td className=\"is-vcentered\">3</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">fugiat veniam minus</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">4</td>\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">et porro tempora</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">5</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">\n                laboriosam mollitia et enim quasi adipisci quia provident illum\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">6</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">\n                qui ullam ratione quibusdam voluptatem quia omnis\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">7</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">\n                illo expedita consequatur quia in\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">8</td>\n\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">9</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">molestiae perspiciatis ipsa</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">10</td>\n\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">\n                illo est ratione doloremque quia maiores aut\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr> */}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, groupBy } = useAppSelector((state) => state.filter);\n\n  const handleStatusChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    if (value === 'all' || value === 'active' || value === 'completed') {\n      dispatch(filterActions.setTodoGroup(value));\n    }\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(filterActions.setQuery(event.target.value));\n  };\n\n  const handleClick = () => {\n    dispatch(filterActions.setQuery(''));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={groupBy}\n            onChange={handleStatusChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleQueryChange}\n          value={query}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClick}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  currentTodo: Todo | null;\n};\n\nexport const TodoModal: React.FC<Props> = ({ currentTodo }) => {\n  const dispatch = useAppDispatch();\n\n  const handleClick = () => {\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentTodo && <Loader />}\n\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            {`Todo #${currentTodo?.id}`}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={handleClick}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">\n            {currentTodo?.title}\n          </p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            {!currentTodo?.completed ? (\n              <strong className=\"has-text-danger\">Planned</strong>\n            ) : (\n              <strong className=\"has-text-success\">Done</strong>\n            )}\n\n            {' by '}\n            <a href=\"mailto:Sincere@april.biz\">Leanne Graham</a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector } from './app/hooks';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const currentTodo: Todo | null = useAppSelector(state => state.currentTodo);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n\n              <TodoList isLoading={isLoading} setIsLoading={setIsLoading} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal currentTodo={currentTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}